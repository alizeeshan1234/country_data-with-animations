<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Country Information</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.css">
  <style>
    body {
      font-family: 'Didot', serif;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      color: #fff;
      background: linear-gradient(45deg, #0f2027, #203a43, #2c5364);
      background-size: 400% 400%;
      animation: gradientMove 10s ease infinite;
      transition: background 0.3s ease, color 0.3s ease;
    }

    @keyframes gradientMove {
      0% {
        background-position: 0% 0%;
      }
      100% {
        background-position: 100% 100%;
      }
    }

#container {
  font-family: 'Didot', serif;
  background-color: #fff;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 12px;
  overflow: hidden;
  width: 300px;
  text-align: center;
  padding: 20px;
  transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55), box-shadow 0.3s ease;
  transform-origin: center center;
  animation: bounce 1s ease infinite;
}

#container:hover {
  transform: scale(1.05);
  box-shadow: 0 12px 20px rgba(0, 0, 0, 0.2);
  background-color: #f0f0f0; /* Change this to your desired hover background color */
  transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55), box-shadow 0.3s ease, background-color 0.3s ease;
}


@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-20px);
  }
  60% {
    transform: translateY(-10px);
  }
}

    img {
      width: 100%;
      height: auto;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease;
    }

    img:hover {
      transform: scale(1.1);
    }

    h1, h2, h3 {
      margin: 10px 0;
      color: #333;
      transition: color 0.3s ease;
    }

    #particles-js {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
    }
  </style>
</head>
<body>
  <div id="particles-js"></div>
  <div id="container"></div>
  <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
  <script>
    particlesJS("particles-js", {
      "particles": {
        "number": {
          "value": 80,
          "density": {
            "enable": true,
            "value_area": 800
          }
        },
        "color": {
          "value": "#ffffff"
        },
        "shape": {
          "type": "circle",
          "stroke": {
            "width": 0,
            "color": "#000000"
          },
          "polygon": {
            "nb_sides": 5
          },
          "image": {
            "src": "img/github.svg",
            "width": 100,
            "height": 100
          }
        },
        "opacity": {
          "value": 0.5,
          "random": false,
          "anim": {
            "enable": false,
            "speed": 1,
            "opacity_min": 0.1,
            "sync": false
          }
        },
        "size": {
          "value": 3,
          "random": true,
          "anim": {
            "enable": false,
            "speed": 40,
            "size_min": 0.1,
            "sync": false
          }
        },
        "line_linked": {
          "enable": true,
          "distance": 150,
          "color": "#ffffff",
          "opacity": 0.4,
          "width": 1
        },
        "move": {
          "enable": true,
          "speed": 6,
          "direction": "none",
          "random": false,
          "straight": false,
          "out_mode": "out",
          "bounce": false,
          "attract": {
            "enable": false,
            "rotateX": 600,
            "rotateY": 1200
          }
        }
      },
      "interactivity": {
        "detect_on": "canvas",
        "events": {
          "onhover": {
            "enable": true,
            "mode": "grab"
          },
          "onclick": {
            "enable": true,
            "mode": "push"
          },
          "resize": true
        },
        "modes": {
          "grab": {
            "distance": 140,
            "line_linked": {
              "opacity": 1
            }
          },
          "bubble": {
            "distance": 400,
            "size": 40,
            "duration": 2,
            "opacity": 8,
            "speed": 3
          },
          "repulse": {
            "distance": 200,
            "duration": 0.4
          },
          "push": {
            "particles_nb": 4
          },
          "remove": {
            "particles_nb": 2
          }
        }
      },
      "retina_detect": true
    });

    const parent = document.getElementById("container");
    async function fetchCountryData(country) {
      try {
        let countryData = await fetch(`https://restcountries.com/v3.1/name/${country}`)
        let [response] = await countryData.json();
        console.log(response);

        let [capital] = response.capital;
        console.log(capital);

        let language = response.languages;
        console.log(language);

        let currency = response.currencies;
        console.log(currency);

        let countryLanguages = Object.values(language).join(', ');
        let countryCurrencies = Object.values(currency).map(element => `${element.name} ${element.symbol}`).join(', ');

        const html = `
          <div>
            <img src="${response.flags.png}" alt="Country Flag"/>
            <h1>Country Name: ${response.name.common}</h1>
            <h2>Region: ${response.region}</h2>
            <h2>Capital: ${capital}</h2>
            <h3>Population üë´: ${(response.population / 1000000).toFixed(1)} Million</h3>
            <h3>Language üó£Ô∏è: ${countryLanguages}</h3>
            <h3>Currency üí∞: ${countryCurrencies}</h3>
          </div>
        `;
        parent.innerHTML = html;
      } catch (error) {
        console.error(error.message);
      }
    }

    fetchCountryData("Portugal");
  </script>
</body>
</html>
